unit Unit1;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.ComCtrls, Data.DB,
  Data.Win.ADODB, Vcl.ExtCtrls, System.ImageList, Vcl.ImgList, Vcl.Grids,
  Vcl.DBGrids, Vcl.Mask, Vcl.DBCtrls, IdComponent, IdBaseComponent, IdUDPBase,
  IdUDPServer, IdGlobal, IdSocketHandle,DateUtils, Vcl.Samples.Spin, IdIPWatch;

type
  TForm1 = class(TForm)
    StatusBar1: TStatusBar;
    PageControl1: TPageControl;
    TabSheet1: TTabSheet;
    Memo1: TMemo;
    TabSheet2: TTabSheet;
    TabSheet3: TTabSheet;
    TabSheet4: TTabSheet;
    ADOConnection1: TADOConnection;
    Timer1: TTimer;
    ListView1: TListView;
    ImageList1: TImageList;
    DBGridRoom: TDBGrid;
    GB_Room: TGroupBox;
    Label1: TLabel;
    ADOQueryRoom: TADOQuery;
    DataSourceRoom: TDataSource;
    DBEditRoomName: TDBEdit;
    Label2: TLabel;
    Label3: TLabel;
    Label4: TLabel;
    Label5: TLabel;
    Label6: TLabel;
    Label7: TLabel;
    Label8: TLabel;
    DBEditRoomID: TDBEdit;
    DBEditIP: TDBEdit;
    DBEditMask: TDBEdit;
    DBEditGateway: TDBEdit;
    DBEditDestip: TDBEdit;
    DBEditOpenPwd: TDBEdit;
    ButtonSave: TButton;
    ButtonOpen: TButton;
    ButtonReset: TButton;
    ButtonTime: TButton;
    ButtonRead: TButton;
    Button5: TButton;
    CheckBoxAutoTime: TCheckBox;
    GroupBox1: TGroupBox;
    DBGrid1: TDBGrid;
    ADOQueryAppointment: TADOQuery;
    DataSourceAppointment: TDataSource;
    GroupBox2: TGroupBox;
    DBGrid2: TDBGrid;
    Button1: TButton;
    Button2: TButton;
    Button3: TButton;
    Timer2: TTimer;
    ADOConnection2: TADOConnection;
    ADOQueryVisit: TADOQuery;
    DataSourceVisit: TDataSource;
    GroupBox3: TGroupBox;
    DBGrid3: TDBGrid;
    ADOQueryReader: TADOQuery;
    DataSourceReader: TDataSource;
    TabSheet5: TTabSheet;
    GroupBox4: TGroupBox;
    Label9: TLabel;
    Label10: TLabel;
    GroupBox5: TGroupBox;
    Label11: TLabel;
    Label12: TLabel;
    Label13: TLabel;
    ComboBox1: TComboBox;
    DBEditRunMode: TDBEdit;
    SpinEditInterval: TSpinEdit;
    DBNavigator1: TDBNavigator;
    DBNavigator2: TDBNavigator;
    Button4: TButton;
    BtnAll: TButton;
    DBEditAppointmentID: TDBEdit;
    Label15: TLabel;
    Label14: TLabel;
    ComboBox2: TComboBox;
    DateTimePicker1: TDateTimePicker;
    IdUDPServer1: TIdUDPServer;
    Button6: TButton;
    LabelPort: TLabel;
    LabelIP: TLabel;
    LabelDBIP: TLabel;
    Button7: TButton;
    Button8: TButton;
    DBNavigator3: TDBNavigator;
    ComboBox3: TComboBox;
    Edit1: TEdit;
    ComboBox4: TComboBox;
    BtnInput: TButton;
    Label16: TLabel;
    Label17: TLabel;
    DateTimePicker2: TDateTimePicker;
    Button9: TButton;
    Button10: TButton;
    Label18: TLabel;
    Label19: TLabel;
    IdIPWatch1: TIdIPWatch;
    ButtonUpdate: TButton;
    ADOQuery1: TADOQuery;
    UpdateCardid: TButton;
    BtnDefault: TButton;
    ADOQueryDefault: TADOQuery;
    DBGrid4: TDBGrid;
    Button11: TButton;
    Button12: TButton;
    ADOQueryAccess: TADOQuery;
    TabSheet6: TTabSheet;
    GroupBox6: TGroupBox;
    ComboBox5: TComboBox;
    Button13: TButton;
    DBGrid5: TDBGrid;
    ADOQueryWorkers: TADOQuery;
    DataSourceWorkers: TDataSource;
    DBNavigator4: TDBNavigator;
    EditKey: TEdit;
    BtnAccess: TButton;
    procedure Timer1Timer(Sender: TObject);
    procedure IdUDPServer1Status(ASender: TObject; const AStatus: TIdStatus;
      const AStatusText: string);
    procedure IdUDPServer1UDPRead(AThread: TIdUDPListenerThread;
      const AData: TIdBytes; ABinding: TIdSocketHandle);
    procedure FormCreate(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure ButtonTimeClick(Sender: TObject);
    procedure ButtonResetClick(Sender: TObject);
    procedure ButtonOpenClick(Sender: TObject);
    procedure ButtonSaveClick(Sender: TObject);
    procedure ButtonReadClick(Sender: TObject);
    procedure Button5Click(Sender: TObject);
    procedure DBEditRunModeChange(Sender: TObject);
    procedure ComboBox1Change(Sender: TObject);
    procedure SpinEditIntervalChange(Sender: TObject);
    procedure Button1Click(Sender: TObject);
    procedure Button4Click(Sender: TObject);
    procedure BtnAllClick(Sender: TObject);
    procedure Button2Click(Sender: TObject);
    procedure Button3Click(Sender: TObject);
    procedure Button6Click(Sender: TObject);
    procedure PageControl1Change(Sender: TObject);
    procedure Button7Click(Sender: TObject);
    procedure Button8Click(Sender: TObject);
    procedure Button9Click(Sender: TObject);
    procedure Button10Click(Sender: TObject);
    procedure BtnInputClick(Sender: TObject);
    procedure ListView1Click(Sender: TObject);
    procedure ButtonUpdateClick(Sender: TObject);
    procedure IdUDPServer1UDPException(AThread: TIdUDPListenerThread;
      ABinding: TIdSocketHandle; const AMessage: string;
      const AExceptionClass: TClass);
    procedure UpdateCardidClick(Sender: TObject);
    procedure BtnDefaultClick(Sender: TObject);
    procedure Button11Click(Sender: TObject);
    procedure Button12Click(Sender: TObject);
    procedure Button13Click(Sender: TObject);
    procedure BtnAccessClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;
  type
    Terminal_Type=record
    TerminalName:string;
    IP:string;
    RoomID:integer;
    RunMode:integer;
    NoPant:integer;
  end;
  type
    VisitRecord_Type=record
    cardid:int64;
    visittime:TDateTime;
    roomid:integer;
    status:integer;
  end;
const
  cPort:integer=5000;

var
  Form1: TForm1;
  TimerCount:integer;
  TimerInterval:integer;
  TerminalCount:integer;
  Terminal:Array[0..32] of Terminal_Type;
  VisitRecord:Array[0..31] of VisitRecord_Type;
  Card:int64;
implementation

{$R *.dfm}

procedure TForm1.BtnAccessClick(Sender: TObject);
var
   buf:array [0..512 ]of Byte;
   cardid:int64;
   i,pos:integer;
   roomid:integer;
   str:string;
begin
   buf[0]:=255;
   buf[1]:=2;
   buf[2]:=255;
   buf[3]:=2;
   for i:=4 to 512 do
      buf[i]:=ord(0);
   roomid:=StrToInt(DBEditRoomID.Text);
   for i := 1 to 32 do
     begin
       if i=roomid then
         str:=str+'1'
       else
         str:=str+'_';
     end;
   //4~452 448字节112个记录；
   AdoqueryAccess.Close;
   AdoqueryAccess.SQL.Clear;
   AdoqueryAccess.SQL.Add('Select top 112 CardID  from access where  Access like '''+str+'''');
   AdoqueryAccess.Open;
   pos:=0;
   while not AdoqueryAccess.Eof do
   Begin
     cardid:=AdoqueryAccess.FieldByName('CardID').AsLargeInt;
     buf[7+pos*4]:=ord(cardid mod 256);
     buf[6+pos*4]:=ord(cardid div 256 );
     buf[5+pos*4]:=ord(cardid div (256*256));
     buf[4+pos*4]:=ord(cardid div (256*256*256));
     inc(pos);
     AdoqueryAccess.Next;
   End;
   IdUDPServer1.SendBuffer(DBEditIP.Text,cPort,RawToBytes(buf,452));
   memo1.Lines.Add('门禁数据下发'+inttostr(pos)+'条');
end;

procedure TForm1.BtnAllClick(Sender: TObject);
var
    i,j:integer;
    sql:string;
    buf:array [0..512 ]of Byte;
    cardid:int64;
    appointtime:TDateTime;
    hour,min,pos:integer;
begin
   buf[0]:=255;
   buf[1]:=1;
   buf[2]:=255;
   buf[3]:=1;
   for i:=0 to TerminalCount-1 do
   begin
     if Terminal[i].RunMode=0 then
     begin
       AdoqueryAppointment.Close;
       AdoqueryAppointment.SQL.Clear;
       AdoqueryAppointment.SQL.Add('Select top 30 AppointmentID,CardID,AppointmentTime,PlusHour,PlusMin from Appointment where Status=''通过审核'' and RoomID='+IntToStr(Terminal[i].RoomID)+' and datediff(day,AppointmentTime,'''+datetimetostr(now)+''')<=0');
       AdoqueryAppointment.Open;
       pos:=0;
       for j:=4 to 512 do
          buf[j]:=ord(0);
       while not AdoqueryAppointment.Eof do
       Begin
         cardid:=AdoqueryAppointment.FieldByName('CardID').AsLargeInt;
         buf[7+pos*16]:=ord(cardid mod 256);
         buf[6+pos*16]:=ord(cardid div 256 );
         buf[5+pos*16]:=ord(cardid div (256*256));
         buf[4+pos*16]:=ord(cardid div (256*256*256));
         appointtime:=AdoqueryAppointment.FieldByName('AppointmentTime').AsDateTime;
         buf[8+pos*16]:=ord(YearOf(appointtime) div 256);
         buf[9+pos*16]:=ord(YearOf(appointtime) mod 256);
         buf[10+pos*16]:=ord(MonthOf(appointtime));
         buf[11+pos*16]:=ord(DayOf(appointtime));
         buf[12+pos*16]:=ord(HourOf(appointtime));
         buf[13+pos*16]:=ord(MinuteOf(appointtime));
         buf[14+pos*16]:=ord(SecondOf(appointtime));
         hour:=AdoqueryAppointment.FieldByName('PlusHour').AsInteger;
         min:=AdoqueryAppointment.FieldByName('PlusMin').AsInteger;
         buf[15+pos*16]:=ord(0);
         buf[16+pos*16]:=ord(hour);
         buf[17+pos*16]:=ord(min);
         buf[18+pos*16]:=ord(0);
         buf[19+pos*16]:=ord(0);
         inc(pos);
         AdoqueryAppointment.Next;
       End;
       IdUDPServer1.SendBuffer(Terminal[i].IP,cPort,RawToBytes(buf,484));
     end;
   end;
end;

procedure TForm1.BtnDefaultClick(Sender: TObject);
var
  Appid,Rid:integer;
  AppTime,Appstuno:string;
  sql:string;
begin
  sql:='Select * from appointment where Datediff(hour,AppointmentTime,'''+datetimetostr(now)+''')>=3 and Status=''通过审核''';
  AdoqueryAppointment.Close;
  AdoqueryAppointment.SQL.Clear;
  AdoqueryAppointment.SQL.Add(sql);
  AdoqueryAppointment.Open;
  while not AdoqueryAppointment.Eof do
  Begin
    AppTime:=AdoqueryAppointment.FieldByName('AppointmentTime').AsString;
    Appid:=AdoqueryAppointment.FieldByName('AppointmentID').AsInteger;
    Rid:=AdoqueryAppointment.FieldByName('RoomID').AsInteger;
    Appstuno:=AdoqueryAppointment.FieldByName('Stuno').AsString;
    //AppTime:='2018-5-30 10:00:00';       Rid:=3;
    sql:='select * from visit where RoomID='+IntToStr(Rid)+' and datediff(hour,VisitTime,'''+AppTime+''')>=0 and datediff(hour,VisitTime,'''+AppTime+''')<=2';
    AdoQueryVisit.Close;
    AdoQueryVisit.SQL.Clear;
    AdoQueryVisit.SQL.Add(sql);
    AdoQueryVisit.Open;
    AdoqueryAppointment.Edit;
    if AdoQueryVisit.Eof then
    begin
        AdoQueryDefault.Append;
        AdoQueryDefault.FieldValues['RoomID']:=Rid;
        AdoQueryDefault.FieldValues['AppointmentID']:=Appid;
        AdoQueryDefault.FieldValues['Stuno']:=Appstuno;
        AdoQueryDefault.FieldValues['AppointmentTime']:=AppTime;
        AdoQueryDefault.Post;
        AdoqueryAppointment.FieldValues['Status']:='未到场';
    end
    else
        AdoqueryAppointment.FieldValues['Status']:='已到场';
    AdoqueryAppointment.Post;
    AdoqueryAppointment.Next;
  End;
end;

procedure TForm1.BtnInputClick(Sender: TObject);
var
  i,count:integer;
begin
  count:=0;
  for i := 0 to 31 do
    begin
      if VisitRecord[i].cardid>0 then
      begin
        AdoQueryVisit.Append;
        AdoQueryVisit.FieldValues['RoomID']:=VisitRecord[i].roomid;
        AdoQueryVisit.FieldValues['CardID']:=VisitRecord[i].cardid;
        AdoQueryVisit.FieldValues['VisitTime']:=VisitRecord[i].VisitTime;
        AdoQueryVisit.FieldValues['Status']:=VisitRecord[i].roomid;
        AdoQueryVisit.Post;
        inc(count);
      end;
    end;
  ShowMessage('成功汇入'+inttostr(count)+'条数据');
  AdoQueryVisit.Refresh;
end;

procedure TForm1.Button10Click(Sender: TObject);
var
  sql:string;
begin
  case ComboBox4.ItemIndex of
     0:   sql:='select * from visit where DateDiff(day,VisitTime,'''+DateToStr(DateTimePicker2.Date)+''')=0';
     else   sql:='select * from visit where Roomid='+inttostr(Terminal[ComboBox4.ItemIndex-1].RoomID)+' and DateDiff(day,VisitTime,'''+DateToStr(DateTimePicker2.Date)+''')=0';;

  end;

  AdoqueryVisit.Close;
  AdoqueryVisit.SQL.Clear;
  AdoqueryVisit.SQL.Add(sql);
  AdoqueryVisit.Open;
end;

procedure TForm1.Button11Click(Sender: TObject);
var
   i:integer;
   buf:array [0..31 ]of Byte;
begin
   for i:=0 to TerminalCount-1 do
   begin
     buf[0]:=255;
     buf[1]:=0;
     buf[2]:=255;
     buf[3]:=0;
     buf[4]:=ord(YearOf(now) div 256);
     buf[5]:=ord(YearOf(now) mod 256);
     buf[6]:=ord(MonthOf(now));
     buf[7]:=ord(DayOf(now));
     buf[8]:=ord(HourOf(now));
     buf[9]:=ord(MinuteOf(now));
     buf[10]:=ord(SecondOf(now));
     IdUDPServer1.SendBuffer(Terminal[i].IP,cPort,RawToBytes(buf,11));
   end;
end;

procedure TForm1.Button12Click(Sender: TObject);
var
   buf:array [0..31 ]of Byte;
begin
     buf[0]:=255;
     buf[1]:=9;
     buf[2]:=255;
     buf[3]:=9;
     IdUDPServer1.SendBuffer(DBEditIP.Text,cPort,RawToBytes(buf,4));
end;

procedure TForm1.Button13Click(Sender: TObject);
var
  sql:string;
begin
  case ComboBox5.ItemIndex of
     0:   sql:='select * from library_users where Workernum like ''%'+EditKey.Text+'%''';
     1:   sql:='select * from library_users where Username like ''%'+EditKey.Text+'%''';
  end;
  AdoqueryWorkers.Close;
  AdoqueryWorkers.SQL.Clear;
  AdoqueryWorkers.SQL.Add(sql);
  AdoqueryWorkers.Open;
end;

procedure TForm1.Button1Click(Sender: TObject);
begin
   AdoqueryAppointment.Close;
   AdoqueryAppointment.SQL.Clear;
   AdoqueryAppointment.SQL.Add('Select  * from Appointment ');
   AdoqueryAppointment.Open;
end;

procedure TForm1.Button2Click(Sender: TObject);
var
  sql:string;
begin
  if Length(DBEditAppointmentID.Text)>0 then
  begin
    sql:='update appointment set Status=''通过审核'' where AppointmentID='+DBEditAppointmentID.Text;
    Adoquery1.SQL.Clear;
    Adoquery1.SQL.Add(sql);
    Adoquery1.ExecSQL;
    AdoqueryAppointment.Refresh;
  end
  else
    ShowMessage('请选定一条记录!');
end;

procedure TForm1.Button3Click(Sender: TObject);
var
  sql:string;
begin
  if Length(DBEditAppointmentID.Text)>0 then
  begin
    sql:='update appointment set Status=''取消预约'' where AppointmentID='+DBEditAppointmentID.Text;
    Adoquery1.SQL.Clear;
    Adoquery1.SQL.Add(sql);
    Adoquery1.ExecSQL;
    AdoqueryAppointment.Refresh;
  end
  else
    ShowMessage('请选定一条记录!');
end;

procedure TForm1.Button4Click(Sender: TObject);
begin
   AdoqueryAppointment.Close;
   AdoqueryAppointment.SQL.Clear;
   AdoqueryAppointment.SQL.Add('Select  * from Appointment where Status=''等待审核''');
   AdoqueryAppointment.Open;
end;

procedure TForm1.Button5Click(Sender: TObject);
var
   buf:array [0..512 ]of Byte;
   cardid:int64;
   appointtime:TDateTime;
   hour,min,pos,i:integer;
begin
   buf[0]:=255;
   buf[1]:=1;
   buf[2]:=255;
   buf[3]:=1;
   for i:=4 to 512 do
      buf[i]:=ord(0);
   //4~479 476字节34个预约记录；
   AdoqueryAppointment.Close;
   AdoqueryAppointment.SQL.Clear;
   AdoqueryAppointment.SQL.Add('Select top 32 AppointmentID,CardID,AppointmentTime,PlusHour,PlusMin from Appointment where Status=''通过审核'' and RoomID='+DBEditRoomID.Text+' and (datediff(day,AppointmentTime,'''+datetimetostr(now)+''')<=0 or PlusHour=99)');
   AdoqueryAppointment.Open;
   pos:=0;
   while not AdoqueryAppointment.Eof do
   Begin
     cardid:=AdoqueryAppointment.FieldByName('CardID').AsLargeInt;
     buf[7+pos*16]:=ord(cardid mod 256);
     buf[6+pos*16]:=ord(cardid div 256 );
     buf[5+pos*16]:=ord(cardid div (256*256));
     buf[4+pos*16]:=ord(cardid div (256*256*256));
     appointtime:=AdoqueryAppointment.FieldByName('AppointmentTime').AsDateTime;
     buf[8+pos*16]:=ord(YearOf(appointtime) div 256);
     buf[9+pos*16]:=ord(YearOf(appointtime) mod 256);
     buf[10+pos*16]:=ord(MonthOf(appointtime));
     buf[11+pos*16]:=ord(DayOf(appointtime));
     buf[12+pos*16]:=ord(HourOf(appointtime));
     buf[13+pos*16]:=ord(MinuteOf(appointtime));
     buf[14+pos*16]:=ord(SecondOf(appointtime));
     hour:=AdoqueryAppointment.FieldByName('PlusHour').AsInteger;
     min:=AdoqueryAppointment.FieldByName('PlusMin').AsInteger;
     buf[15+pos*16]:=ord(0);
     buf[16+pos*16]:=ord(hour);
     buf[17+pos*16]:=ord(min);
     buf[18+pos*16]:=ord(0);
     buf[19+pos*16]:=ord(0);
     inc(pos);
     AdoqueryAppointment.Next;
   End;
   IdUDPServer1.SendBuffer(DBEditIP.Text,cPort,RawToBytes(buf,484));
end;

procedure TForm1.Button6Click(Sender: TObject);
var
  sql:string;
begin
  if ComboBox2.ItemIndex=0 then
    sql:='select * from appointment '
  else
    sql:='select * from appointment where RoomID='+IntToStr(Terminal[ComBoBox2.ItemIndex-1].RoomID);
  AdoqueryAppointment.Close;
  AdoqueryAppointment.SQL.Clear;
  AdoqueryAppointment.SQL.Add(sql);
  AdoqueryAppointment.Open;
end;

procedure TForm1.Button7Click(Sender: TObject);
var
  sql:string;
begin
  sql:='select * from appointment where DateDiff(day,AppointmentTime,'''+DateToStr(DateTimePicker1.Date)+''')=0';
  AdoqueryAppointment.Close;
  AdoqueryAppointment.SQL.Clear;
  AdoqueryAppointment.SQL.Add(sql);
  AdoqueryAppointment.Open;
end;

procedure TForm1.Button8Click(Sender: TObject);
var
  sql:string;
begin
  case ComboBox3.ItemIndex of
     0:   sql:='select * from ICReader where name like ''%'+Edit1.Text+'%''';
     1:   sql:='select * from ICReader where StudentCode like ''%'+Edit1.Text+'%''';
     2:   sql:='select * from ICReader where Cardid like ''%'+Edit1.Text+'%''';
     3:   sql:='select * from ICReader where dept like ''%'+Edit1.Text+'%''';
  end;

  AdoqueryReader.Close;
  AdoqueryReader.SQL.Clear;
  AdoqueryReader.SQL.Add(sql);
  AdoqueryReader.Open;
end;

procedure TForm1.Button9Click(Sender: TObject);
var
  sql:string;
begin
  case ComboBox4.ItemIndex of
     0:   sql:='select * from visit ';
     else   sql:='select * from visit where Roomid='+inttostr(Terminal[ComboBox4.ItemIndex-1].RoomID);

  end;

  AdoqueryVisit.Close;
  AdoqueryVisit.SQL.Clear;
  AdoqueryVisit.SQL.Add(sql);
  AdoqueryVisit.Open;
end;

procedure TForm1.ButtonOpenClick(Sender: TObject);
var
   buf:array [0..31 ]of Byte;
begin
   if ButtonOpen.Caption='开锁' then
   begin
     buf[0]:=255;
     buf[1]:=7;
     buf[2]:=255;
     buf[3]:=7;
     IdUDPServer1.SendBuffer(DBEditIP.Text,cPort,RawToBytes(buf,4));
     ButtonOpen.Caption:='恢复自控';
   end
   else
   begin
     buf[0]:=255;
     buf[1]:=8;
     buf[2]:=255;
     buf[3]:=8;
     IdUDPServer1.SendBuffer(DBEditIP.Text,cPort,RawToBytes(buf,4));
     ButtonOpen.Caption:='开锁';
   end;
end;

procedure TForm1.ButtonReadClick(Sender: TObject);
var
   buf:array [0..31 ]of Byte;
begin

   buf[0]:=255;
   buf[1]:=3;
   buf[2]:=255;
   buf[3]:=3;
   if ComboBox4.ItemIndex=0 then
    ShowMessage('请选择具体房间名称！')
   else
    IdUDPServer1.SendBuffer(Terminal[ComboBox4.ItemIndex-1].IP,cPort,RawToBytes(buf,4));
end;

procedure TForm1.ButtonResetClick(Sender: TObject);
var
   buf:array [0..31 ]of Byte;
begin
   buf[0]:=255;
   buf[1]:=6;
   buf[2]:=255;
   buf[3]:=6;
   IdUDPServer1.SendBuffer(DBEditIP.text,cPort,RawToBytes(buf,4));
end;

procedure TForm1.ButtonSaveClick(Sender: TObject);
var
  buf:array [0..64 ]of Byte;
  str:string;
  strcnt:integer;
  ts:TStringList;
  i:integer;
begin

   buf[0]:=255;
   buf[1]:=5;
   buf[2]:=255;
   buf[3]:=5;
   //4~29  32字节配置信息LIP4 SUB4 GW4 RIP4 RID 4 PWD5 MOD1

   ts:=TStringList.Create;
   try
      str:=DBEditIP.Text;
      strcnt:=ExtractStrings(['.'],[' '],PChar(str),ts);
      if strcnt=4 then
      begin
        buf[4]:=ord(strtoint(ts[0]));
        buf[5]:=ord(strtoint(ts[1]));
        buf[6]:=ord(strtoint(ts[2]));
        buf[7]:=ord(strtoint(ts[3]));
      end;
   finally
      ts.Free;
   end;
   ts:=TStringList.Create;
   try
      str:=DBEditMask.Text;

      strcnt:=ExtractStrings(['.'],[' '],PChar(str),ts);
      if strcnt=4 then
      begin
        buf[8]:=ord(strtoint(ts[0]));
        buf[9]:=ord(strtoint(ts[1]));
        buf[10]:=ord(strtoint(ts[2]));
        buf[11]:=ord(strtoint(ts[3]));
      end;
   finally
      ts.Free;
   end;
   ts:=TStringList.Create;
   try
      str:=DBEditGateway.Text;

      strcnt:=ExtractStrings(['.'],[' '],PChar(str),ts);
      if strcnt=4 then
      begin
        buf[12]:=ord(strtoint(ts[0]));
        buf[13]:=ord(strtoint(ts[1]));
        buf[14]:=ord(strtoint(ts[2]));
        buf[15]:=ord(strtoint(ts[3]));
      end;
   finally
      ts.Free;
   end;
   ts:=TStringList.Create;
   try
      str:=DBEditDestip.Text;
      strcnt:=ExtractStrings(['.'],[' '],PChar(str),ts);
      if strcnt=4 then
      begin
        buf[16]:=ord(strtoint(ts[0]));
        buf[17]:=ord(strtoint(ts[1]));
        buf[18]:=ord(strtoint(ts[2]));
        buf[19]:=ord(strtoint(ts[3]));
      end;
   finally
      ts.Free;
   end;
   buf[20]:=ord(strtoint(DBEditRoomId.Text));
   str:=DBEditOpenPwd.Text;
   buf[21]:=ord(str[1]);
   buf[22]:=ord(str[2]);
   buf[23]:=ord(str[3]);
   buf[24]:=ord(str[4]);
   buf[25]:=ord(str[5]);

   buf[26]:=ord(StrToInt(DBEditRunMode.Text));

   for i := 0 to  TerminalCount-1 do
   begin
     if Terminal[i].RoomID=strtoint(DBEditRoomID.Text) then
       break;
   end;
   IdUDPServer1.SendBuffer(Terminal[i].IP,cPort,RawToBytes(buf,30));
   Terminal[i].IP:=DBEditIP.Text;
end;

procedure TForm1.ButtonTimeClick(Sender: TObject);
var
   buf:array [0..31 ]of Byte;
begin
   buf[0]:=255;
   buf[1]:=0;
   buf[2]:=255;
   buf[3]:=0;
   buf[4]:=ord(YearOf(now) div 256);
   buf[5]:=ord(YearOf(now) mod 256);
   buf[6]:=ord(MonthOf(now));
   buf[7]:=ord(DayOf(now));
   buf[8]:=ord(HourOf(now));
   buf[9]:=ord(MinuteOf(now));
   buf[10]:=ord(SecondOf(now));
   IdUDPServer1.SendBuffer(DBEditIP.Text,cPort,RawToBytes(buf,11));
end;

procedure TForm1.ButtonUpdateClick(Sender: TObject);
begin
  AdoqueryVisit.Refresh;
end;

procedure TForm1.ComboBox1Change(Sender: TObject);
begin
  DBEditRunMode.Text:=IntToStr(ComboBox1.ItemIndex);
end;

procedure TForm1.DBEditRunModeChange(Sender: TObject);
begin
  ComboBox1.ItemIndex:=StrToInt(DBEditRunMode.Text);
  if combobox1.ItemIndex=0 then
  begin
    button5.Enabled:=true;
    BtnAccess.Enabled:=false;
  end
  else if combobox1.ItemIndex=3  then
   begin
    button5.Enabled:=false;
    BtnAccess.Enabled:=true;
  end
  else
  begin
    button5.Enabled:=false;
    BtnAccess.Enabled:=false;
  end

end;

procedure TForm1.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  IdUDPServer1.Active:= false;
end;

procedure TForm1.FormCreate(Sender: TObject);
var
  i:integer;
   IdIPWatch: TIdIPWatch;
begin
  IdUDPServer1.DefaultPort:= cPort;
  IdUDPServer1.Active:= true;
  SpinEditInterval.Value:=20;
  try
    IdIPWatch:=TIdIPWatch.Create(nil);
    LabelIP.Caption:=IdIPWatch.LocalIP;
  finally
    IdIPWatch.Free;
  end;


  LabelPort.caption:=inttostr(cPort);
  AdoqueryRoom.Open;
  while not AdoqueryRoom.Eof do
  begin
    Terminal[TerminalCount].TerminalName:=AdoqueryRoom.FieldByName('RoomName').AsString;
    Terminal[TerminalCount].RoomID:=AdoqueryRoom.FieldByName('RoomID').AsInteger;
    Terminal[TerminalCount].IP:=AdoqueryRoom.FieldByName('IP').AsString;
    Terminal[TerminalCount].RunMode:=AdoqueryRoom.FieldByName('RunMode').AsInteger;;
    Terminal[TerminalCount].NoPant:=0;
    TerminalCount:=TerminalCount+1;
    AdoqueryRoom.Next;
  end;
  AdoqueryRoom.First;
  ListView1.Clear;
  for i:=0 to TerminalCount-1 do
  begin
    ComboBox2.Items.Add(Terminal[i].TerminalName);
    ComboBox4.Items.Add(Terminal[i].TerminalName);
    with listview1.items.add do
    begin
      caption:=Terminal[i].TerminalName;
      imageindex:=0;
    end;
  end;
  ComboBox4.ItemIndex:=0;
  Statusbar1.Panels[1].Text:='设备:'+IntToStr(TerminalCount);
end;

procedure TForm1.IdUDPServer1Status(ASender: TObject; const AStatus: TIdStatus;
  const AStatusText: string);
begin
  Statusbar1.Panels[0].Text:=AStatusText;
end;

procedure TForm1.IdUDPServer1UDPException(AThread: TIdUDPListenerThread;
  ABinding: TIdSocketHandle; const AMessage: string;
  const AExceptionClass: TClass);
begin
  Statusbar1.Panels[0].Text:=AMessage;
end;

procedure TForm1.IdUDPServer1UDPRead(AThread: TIdUDPListenerThread;
  const AData: TIdBytes; ABinding: TIdSocketHandle);
var
  str:string;
  sqlstr:string;
  strcnt:integer;
  ts:TStringList;
  i,roomid:integer;
  cardid:int64;
  settings: TFormatSettings;
  buf:array [0..31 ]of Byte;
  access:array [1..32 ]of Char;
begin
//0xF1 0xF1 刷卡 C2S
//0xFF 0x00 0xFF 0x00 时间设置  S2C
//0xFF 0x01 0xFF 0x01 信息更新  S2C
//0xFF 0x03 0xFF 0x03 获取刷卡记录  S2C
//0xFF 0x04 0xFF 0x04 初始化存储 S2C
//0xFF 0x05 0xFF 0x05 参数设置 S2C
//0xFF 0x06 0xFF 0x06 重启 S2C
//0xFF 0x07 0xFF 0x07 开锁 S2C
//0xFF 0x08 0xFF 0x08 恢复自控 S2C
  GetLocaleFormatSettings(GetUserDefaultLCID, settings);
  settings.DateSeparator := '-';
  settings.TimeSeparator := ':';
  settings.ShortDateFormat := 'yyyy-mm-dd';
  settings.ShortTimeFormat := 'hh:nn:ss';
  str:=Trim(BytesToString(AData));
  if length(str)>0 then
  begin
    for i := 0 to TerminalCount-1 do
    begin
      if Terminal[i].IP=ABinding.PeerIP then
      begin
         ListView1.Items[i].ImageIndex:=1;
         Terminal[i].NoPant :=0;
         roomid:=Terminal[i].RoomID;
      end;
    end;
    if Memo1.Lines.Count>50 then
      Memo1.Clear;
    if (AData[0]=240)and(AData[1]=240)then
    begin
      cardid:=AData[2]*256*256*256+AData[3]*256*256+AData[4]*256+AData[5];
      if cardid<>Card then
      begin
        Memo1.Lines.Add(ABinding.PeerIP+' 房间 '+IntToStr(roomid)+' 刷卡 '+IntToStr(cardid)+' status:'+IntToStr(AData[15])+' at '+DateTimeToStr(now));
        Card:=cardid;
        if AData[15]=3 then   //联机门禁认证
        begin
          sqlstr:='select * from access where CardID='+IntToStr(cardid);
          AdoqueryAccess.SQL.Clear;
          AdoqueryAccess.SQL.Add(sqlstr);
          AdoqueryAccess.Open;
          // Memo1.Lines.Add( sqlstr);
          if AdoqueryAccess.Eof then
             Memo1.Lines.Add('不存在卡号')
          else
          Begin
            str:=AdoqueryAccess.FieldByName('access').AsString;
            CopyMemory(@access[1],PChar(str),Length(str));
            if access[roomid]='1' then
            begin
               buf[0]:=255;
               buf[1]:=9;
               buf[2]:=255;
               buf[3]:=9;
               IdUDPServer1.SendBuffer(ABinding.PeerIP,cPort,RawToBytes(buf,4));
               Memo1.Lines.Add('远程认证开锁');
            end
            else
              Memo1.Lines.Add('无权限！');
          End;
        end;
        AdoqueryVisit.Append;
        AdoqueryVisit.FieldValues['RoomID']:= IntToStr(AData[14]);
        AdoqueryVisit.FieldValues['CardID']:= cardid;
        AdoqueryVisit.FieldValues['VisitTime']:= now;
        AdoqueryVisit.FieldValues['Status']:= IntToStr(AData[15]);
        AdoqueryVisit.Post;
      end;
     end;
    if (AData[0]=241)and(AData[1]=241)then
    begin
//      Memo1.Lines.Add(ABinding.PeerIP+' 心跳 '+DateTimeToStr(now));
    end;
    if (AData[0]=255)and(AData[1]=0)and(AData[2]=255)and(AData[3]=0)then
    begin
      Memo1.Lines.Add(ABinding.PeerIP+' 对时 '+DateTimeToStr(now));
    end;
    if (AData[0]=255)and(AData[1]=1)and(AData[2]=255)and(AData[3]=1)then
    begin
      Memo1.Lines.Add(ABinding.PeerIP+' 信息更新 '+DateTimeToStr(now));
    end;
    if (AData[0]=255)and(AData[1]=3)and(AData[2]=255)and(AData[3]=3)then
    begin
      Memo1.Lines.Add(ABinding.PeerIP+' 获取刷卡记录 '+DateTimeToStr(now));

    end;
    if length(AData)=512 then
    begin
       Memo1.Lines.Add(ABinding.PeerIP+' 记录: ');
       for i := 0 to 31 do
       begin
         BtnInput.Enabled:=true;
         cardid:=AData[i*16]*256*256*256+AData[i*16+1]*256*256+AData[i*16+2]*256+AData[i*16+3];
         str:= IntToStr(2011+AData[i*16+5])
         +'-'+ IntToStr(AData[i*16+6])
         +'-'+ IntToStr(AData[i*16+7])
         +char($20)+ IntToStr(AData[i*16+8])
         +':'+ IntToStr(AData[i*16+9])
         +':'+ IntToStr(AData[i*16+10]);
         if (2011+AData[i*16+5])<2089 then
         begin
           VisitRecord[i].cardid:=cardid;
           VisitRecord[i].visittime:=StrToDateTime(str,settings);
           VisitRecord[i].status:=AData[i*16+12];
           VisitRecord[i].roomid:=roomid;
           Memo1.Lines.Add(ABinding.PeerIP+' '+inttostr(VisitRecord[i].cardid)+' '+str);
         end
         else
         begin
           VisitRecord[i].cardid:=0;
           VisitRecord[i].visittime:=StrToDateTime('2019-12-31 23:59:59',settings);
           VisitRecord[i].status:=0;
           VisitRecord[i].roomid:=0;
         end;


       end;

    end;
    if (AData[0]=255)and(AData[1]=4)and(AData[2]=255)and(AData[3]=4)then
    begin
      Memo1.Lines.Add(ABinding.PeerIP+' 初始化存储 '+DateTimeToStr(now));
    end;
        if (AData[0]=255)and(AData[1]=5)and(AData[2]=255)and(AData[3]=5)then
    begin
      Memo1.Lines.Add(ABinding.PeerIP+' 参数设置 '+DateTimeToStr(now));
    end;
        if (AData[0]=255)and(AData[1]=6)and(AData[2]=255)and(AData[3]=6)then
    begin
      Memo1.Lines.Add(ABinding.PeerIP+' 重启 '+DateTimeToStr(now));
    end;
        if (AData[0]=255)and(AData[1]=7)and(AData[2]=255)and(AData[3]=7)then
    begin
      Memo1.Lines.Add(ABinding.PeerIP+' 开锁 '+DateTimeToStr(now));
    end;
        if (AData[0]=255)and(AData[1]=8)and(AData[2]=255)and(AData[3]=8)then
    begin
      Memo1.Lines.Add(ABinding.PeerIP+' 恢复自控 '+DateTimeToStr(now));
    end;
  end;
end;

procedure TForm1.ListView1Click(Sender: TObject);
var
  i:integer;
begin
  AdoqueryRoom.First;
  for i:=0 to ListView1.ItemIndex-1 do
  begin
    AdoqueryRoom.Next;
  end;
end;

procedure TForm1.PageControl1Change(Sender: TObject);
begin
   if PageControl1.ActivePageIndex=1 then
      Button1.Click;
end;

procedure TForm1.SpinEditIntervalChange(Sender: TObject);
begin
  TimerInterval:=SpinEditInterval.Value*60;
end;

procedure TForm1.Timer1Timer(Sender: TObject);
var
  i:integer;
  buf:array [0..31 ]of Byte;
begin
  StatusBar1.Panels[2].Text:='当前时间:'+DateTimeToStr(now());
  Inc(TimerCount);
  Card:=0;
  if (CheckBoxAutoTime.Checked) and (TimerCount>=TimerInterval) then
  begin
    TimerCount:=0;
    buf[0]:=255;
    buf[1]:=0;
    buf[2]:=255;
    buf[3]:=0;
    buf[4]:=ord(YearOf(now) div 256);
    buf[5]:=ord(YearOf(now) mod 256);
    buf[6]:=ord(MonthOf(now));
    buf[7]:=ord(DayOf(now));
    buf[8]:=ord(HourOf(now));
    buf[9]:=ord(MinuteOf(now));
    buf[10]:=ord(SecondOf(now));
    for i:=0 to TerminalCount-1 do
    begin
      IdUDPServer1.SendBuffer(Terminal[i].IP,cPort,RawToBytes(buf,11));
      sleep(500);
    end;
    UpdateCardid.Click;
    BtnAll.Click;
  end;
    for i := 0 to TerminalCount-1 do
    begin
      Inc(Terminal[i].NoPant);
      if Terminal[i].NoPant>60 then
        ListView1.Items[i].ImageIndex:=0;
    end;

end;

procedure TForm1.UpdateCardidClick(Sender: TObject);
var
  stuno:string;
  cardid:string;
  sql:string;
begin
  sql:='Select stuno,CardID from appointment where datediff(day,AppointmentTime,'''+DatetimeTostr(now)+''')<=0';
  Adoquery1.SQL.Clear;
  Adoquery1.SQL.Add(sql);
  Adoquery1.Open;
  while not Adoquery1.Eof do
  Begin
    stuno:=Adoquery1.FieldByName('Stuno').AsString;
    sql:='Select top 1 * from ICReader where flag=0 and StudentCode='''+stuno+'''';
    AdoqueryReader.SQL.Clear;
    AdoqueryReader.SQL.Add(sql);
    AdoqueryReader.Open;
    if not AdoqueryReader.Eof then
    begin
      cardid:=AdoqueryReader.FieldByName('CardId').AsString;
      Adoquery1.Edit;
      Adoquery1.FieldValues['CardID']:=Trim(cardid);
      Adoquery1.Post;
    end;
    Adoquery1.Next;
  End;
end;

end.